// This file is auto-generated by @hey-api/openapi-ts

import {
  createClient,
  createConfig,
  type Options,
} from "@hey-api/client-fetch";
import type {
  GetCollectionsData,
  GetCollectionsError,
  GetCollectionsResponse,
  CreateCollectionData,
  CreateCollectionError,
  CreateCollectionResponse,
  GetCollectionData,
  GetCollectionError,
  GetCollectionResponse,
  GetCollectionSchemaData,
  GetCollectionSchemaError,
  GetCollectionSchemaResponse,
  QueryDocumentsData,
  QueryDocumentsError,
  QueryDocumentsResponse,
  CreateDocumentData,
  CreateDocumentError,
  CreateDocumentResponse,
  DeleteDocumentsData,
  DeleteDocumentsError,
  DeleteDocumentsResponse,
  QueryDocumentsByShapeData,
  QueryDocumentsByShapeError,
  QueryDocumentsByShapeResponse,
  GetDocumentData,
  GetDocumentError,
  GetDocumentResponse,
  UpdateDocumentData,
  UpdateDocumentError,
  UpdateDocumentResponse,
  ReplaceDocumentData,
  ReplaceDocumentError,
  ReplaceDocumentResponse,
  DeleteDocumentData,
  DeleteDocumentError,
  DeleteDocumentResponse,
  CreateDocumentsData,
  CreateDocumentsError,
  CreateDocumentsResponse,
} from "./types.gen";

export const client = createClient(createConfig());

/**
 * Get all collections
 */
export const getCollections = <ThrowOnError extends boolean = false>(
  options?: Options<GetCollectionsData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetCollectionsResponse,
    GetCollectionsError,
    ThrowOnError
  >({
    ...options,
    url: "/collections",
  });
};

/**
 * Create a new collection
 */
export const createCollection = <ThrowOnError extends boolean = false>(
  options?: Options<CreateCollectionData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    CreateCollectionResponse,
    CreateCollectionError,
    ThrowOnError
  >({
    ...options,
    url: "/collections",
  });
};

/**
 * Get a single collection by name
 */
export const getCollection = <ThrowOnError extends boolean = false>(
  options: Options<GetCollectionData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetCollectionResponse,
    GetCollectionError,
    ThrowOnError
  >({
    ...options,
    url: "/collections/{collection}",
  });
};

/**
 * Get JSON schema for a collection
 */
export const getCollectionSchema = <ThrowOnError extends boolean = false>(
  options: Options<GetCollectionSchemaData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetCollectionSchemaResponse,
    GetCollectionSchemaError,
    ThrowOnError
  >({
    ...options,
    url: "/collections/{collection}/schema",
  });
};

/**
 * Query documents in a collection
 */
export const queryDocuments = <ThrowOnError extends boolean = false>(
  options: Options<QueryDocumentsData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    QueryDocumentsResponse,
    QueryDocumentsError,
    ThrowOnError
  >({
    ...options,
    url: "/collections/{collection}/documents",
  });
};

/**
 * Create a new document
 */
export const createDocument = <ThrowOnError extends boolean = false>(
  options: Options<CreateDocumentData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    CreateDocumentResponse,
    CreateDocumentError,
    ThrowOnError
  >({
    ...options,
    url: "/collections/{collection}/documents",
  });
};

/**
 * Delete multiple documents
 */
export const deleteDocuments = <ThrowOnError extends boolean = false>(
  options: Options<DeleteDocumentsData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    DeleteDocumentsResponse,
    DeleteDocumentsError,
    ThrowOnError
  >({
    ...options,
    url: "/collections/{collection}/documents",
  });
};

/**
 * Query documents in a collection
 */
export const queryDocumentsByShape = <ThrowOnError extends boolean = false>(
  options: Options<QueryDocumentsByShapeData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    QueryDocumentsByShapeResponse,
    QueryDocumentsByShapeError,
    ThrowOnError
  >({
    ...options,
    url: "/collections/{collection}/documents/query",
  });
};

/**
 * Get a single document by ID
 */
export const getDocument = <ThrowOnError extends boolean = false>(
  options: Options<GetDocumentData, ThrowOnError>,
) => {
  return (options?.client ?? client).get<
    GetDocumentResponse,
    GetDocumentError,
    ThrowOnError
  >({
    ...options,
    url: "/collections/{collection}/documents/{documentId}",
  });
};

/**
 * Update a document partially
 */
export const updateDocument = <ThrowOnError extends boolean = false>(
  options: Options<UpdateDocumentData, ThrowOnError>,
) => {
  return (options?.client ?? client).patch<
    UpdateDocumentResponse,
    UpdateDocumentError,
    ThrowOnError
  >({
    ...options,
    url: "/collections/{collection}/documents/{documentId}",
  });
};

/**
 * Replace a document completely
 */
export const replaceDocument = <ThrowOnError extends boolean = false>(
  options: Options<ReplaceDocumentData, ThrowOnError>,
) => {
  return (options?.client ?? client).put<
    ReplaceDocumentResponse,
    ReplaceDocumentError,
    ThrowOnError
  >({
    ...options,
    url: "/collections/{collection}/documents/{documentId}",
  });
};

/**
 * Delete a document
 */
export const deleteDocument = <ThrowOnError extends boolean = false>(
  options: Options<DeleteDocumentData, ThrowOnError>,
) => {
  return (options?.client ?? client).delete<
    DeleteDocumentResponse,
    DeleteDocumentError,
    ThrowOnError
  >({
    ...options,
    url: "/collections/{collection}/documents/{documentId}",
  });
};

/**
 * Create multiple documents
 */
export const createDocuments = <ThrowOnError extends boolean = false>(
  options: Options<CreateDocumentsData, ThrowOnError>,
) => {
  return (options?.client ?? client).post<
    CreateDocumentsResponse,
    CreateDocumentsError,
    ThrowOnError
  >({
    ...options,
    url: "/collections/{collection}/documents/batch",
  });
};
