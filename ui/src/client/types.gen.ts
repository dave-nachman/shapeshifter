// This file is auto-generated by @hey-api/openapi-ts

export type GetCollectionsData = {
  body?: {
    [key: string]: unknown;
  };
};

export type GetCollectionsResponse = Array<{
  name: string;
  documents: Array<{
    _id: string;
    [key: string]: unknown | string;
  }>;
}>;

export type GetCollectionsError = unknown;

export type CreateCollectionData = {
  body?: {
    name: string;
  };
};

export type CreateCollectionResponse = {
  name: string;
  documents: Array<{
    _id: string;
    [key: string]: unknown | string;
  }>;
};

export type CreateCollectionError = unknown;

export type GetCollectionData = {
  body?: {
    [key: string]: unknown;
  };
  path: {
    collection: string;
  };
};

export type GetCollectionResponse = {
  name: string;
  documents: Array<{
    _id: string;
    [key: string]: unknown | string;
  }>;
};

export type GetCollectionError = unknown;

export type GetCollectionSchemaData = {
  body?: {
    [key: string]: unknown;
  };
  path: {
    collection: string;
  };
};

export type GetCollectionSchemaResponse =
  | {
      [key: string]: unknown;
    }
  | string;

export type GetCollectionSchemaError = unknown;

export type QueryDocumentsData = {
  body?: {
    [key: string]: unknown;
  };
  path: {
    collection: string;
  };
};

export type QueryDocumentsResponse = {
  documents: Array<{
    _id: string;
    [key: string]: unknown | string;
  }>;
  operation?:
    | {
        type: "map";
        jqMappingCommandPerDocument: string;
      }
    | {
        type: "reject";
        message: string;
      };
};

export type QueryDocumentsError = unknown;

export type CreateDocumentData = {
  body?: {
    [key: string]: unknown;
  };
  path: {
    collection: string;
  };
};

export type CreateDocumentResponse = {
  document?: {
    _id: string;
    [key: string]: unknown | string;
  };
  operation?:
    | {
        type: "map";
        jqMappingCommandPerDocument: string;
      }
    | {
        type: "reject";
        message: string;
      }
    | {
        type: "isSubset";
      }
    | {
        type: "isSuperset";
      }
    | {
        type: "migrate";
        newSchema: {
          [key: string]: unknown;
        };
        jqMappingCommandPerDocumentFromOldToNewSchema: string;
      };
};

export type CreateDocumentError = unknown;

export type DeleteDocumentsData = {
  body?: {
    documentIds: Array<string>;
  };
  path: {
    collection: string;
  };
};

export type DeleteDocumentsResponse = {
  [key: string]: unknown;
};

export type DeleteDocumentsError = unknown;

export type QueryDocumentsByShapeData = {
  body?: {
    shape: {
      [key: string]: unknown;
    };
    filter?: {
      [key: string]: unknown;
    };
  };
  path: {
    collection: string;
  };
};

export type QueryDocumentsByShapeResponse = {
  documents: Array<{
    _id: string;
    [key: string]: unknown | string;
  }>;
  operation?:
    | {
        type: "map";
        jqMappingCommandPerDocument: string;
      }
    | {
        type: "reject";
        message: string;
      };
};

export type QueryDocumentsByShapeError = unknown;

export type GetDocumentData = {
  body?: {
    [key: string]: unknown;
  };
  path: {
    collection: string;
    documentId: string;
  };
};

export type GetDocumentResponse = {
  _id: string;
  [key: string]: unknown | string;
};

export type GetDocumentError = unknown;

export type UpdateDocumentData = {
  body?: {
    [key: string]: unknown;
  };
  path: {
    collection: string;
    documentId: string;
  };
};

export type UpdateDocumentResponse = {
  _id: string;
  [key: string]: unknown | string;
};

export type UpdateDocumentError = unknown;

export type ReplaceDocumentData = {
  body?: {
    [key: string]: unknown;
  };
  path: {
    collection: string;
    documentId: string;
  };
};

export type ReplaceDocumentResponse = {
  _id: string;
  [key: string]: unknown | string;
};

export type ReplaceDocumentError = unknown;

export type DeleteDocumentData = {
  body?: {
    [key: string]: unknown;
  };
  path: {
    collection: string;
    documentId: string;
  };
};

export type DeleteDocumentResponse = {
  [key: string]: unknown;
};

export type DeleteDocumentError = unknown;

export type CreateDocumentsData = {
  body?: Array<{
    [key: string]: unknown;
  }>;
  path: {
    collection: string;
  };
};

export type CreateDocumentsResponse = {
  documents?: Array<{
    _id: string;
    [key: string]: unknown | string;
  }>;
  operation?:
    | {
        type: "map";
        jqMappingCommandPerDocument: string;
      }
    | {
        type: "reject";
        message: string;
      }
    | {
        type: "isSubset";
      }
    | {
        type: "isSuperset";
      }
    | {
        type: "migrate";
        newSchema: {
          [key: string]: unknown;
        };
        jqMappingCommandPerDocumentFromOldToNewSchema: string;
      };
};

export type CreateDocumentsError = unknown;
